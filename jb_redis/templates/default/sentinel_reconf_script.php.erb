#!/usr/bin/php
<?php
require_once "<%= node['consul']['config_dir'] %>/JbServerHelpers/src/Consul.php";

define('MASTER_NAME', $argv[1]);
define('ROLE', $argv[2]);
define('STATE', $argv[3]);
define('FROM_IP', $argv[4]);
define('FROM_PORT', $argv[5]);
define('TO_IP', $argv[6]);
define('TO_PORT', $argv[7]);
define('CONSUL_BASE_URL', 'http://localhost:<%= node['consul']['ports']['http'] || 8500 %>/v1');
define('CURRENT_IP', '<%= @currentip %>');
define('CONSUL_CONFIG_PATH', '<%= node['consul']['config_dir'] %>');
define('CONSUL_BIN', '<%= node['consul']['install_dir'] %>/consul');
define('CONSUL_PORT', '<%= node['consul']['ports']['serf_lan'] || 8301 %>');

$consul = new Consul(CONSUL_BASE_URL, CONSUL_CONFIG_PATH, CONSUL_BIN, CONSUL_PORT);

$reload_consul = false;

if(STATE == 'start'){
    //If a new master has been elected, we have to update the master on consul
    $session_id = $consul->createSession();
    //If we are on the old master server, remove the master tag
    if(FROM_IP == CURRENT_IP){
        //Get a new lock for removing the master
        $lock_remove_master = $consul->getLock('remove_master', $session_id);
        if($lock_remove_master){
            //Load redis service configuration
            $service_name = 'redis' . FROM_PORT;
            $consul->loadServiceConfiguration($service_name);
            //Replace the master tag with the slave tag
            if($consul->removeTagFromService($service_name, 'master'))
                $reload_consul = true;
            if($consul->addTagToService($service_name, 'slave'))
                $reload_consul = true;
            //Save the changes of the service configuration
            $consul->saveServiceConfiguration($service_name);
            //Releses the current remove master lock
            $consul->releaseLock('remove_master', $session_id);
        }
    }

    if(TO_IP == CURRENT_IP){
        //Get a new lock for adding a new master
        $lock_add_master = $consul->getLock('add_master', $session_id);
        if($lock_add_master){
            $redis_master = $consul->getService('redis', 'master');
            //If there is no redis master (it might be removed by this same script) or if the master is not the new one
            if(empty($redis_master) || (!empty($redis_master) && ($redis_master[0]['Address'] != TO_IP || $redis_master[0]['ServicePort'] != TO_PORT))){
                //Load redis service configuration
                $service_name = 'redis' . TO_PORT;
                $consul->loadServiceConfiguration($service_name);
                //Replace the slave tag with the master tag
                if($consul->removeTagFromService($service_name, 'slave'))
                    $reload_consul = true;
                if($consul->addTagToService($service_name, 'master'))
                    $reload_consul = true;
                $consul->saveServiceConfiguration($service_name);
            }
            //Releses the current add master lock
            $consul->releaseLock('add_master', $session_id);
        }
    }
    
    //Deltes current consul session
    $consul->destroySession($session_id);
}

if($reload_consul)
    $consul->reloadAgent();